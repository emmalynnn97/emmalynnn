{"version":3,"sources":["Project.js","FeatureProjects.js","Hero.js","Nav.js","App.js","serviceWorker.js","index.js"],"names":["Project","props","state","image","title","content","width","height","opacity","projectStyle","backgroundImage","this","backgroundSize","backgroundPosition","fontStyle","color","fontWeight","contentStyle","backgroundColor","position","transition","onMouseEnter","setState","onMouseLeave","className","style","dangerouslySetInnerHTML","__html","Component","FeatureProjects","endpoint","fetch","then","res","json","data","object","metadata","feature_projects","catch","console","log","projects","map","project","url","display","justifyContent","border","marginTop","padding","Hero","overlayColor","hasOverlay","hero_image","hero_overlay","overlay_color","heroStyle","backgroundAttachment","overlayStyle","left","top","Nav","navStyle","right","zIndex","App","flexDirection","alignItems","overflowX","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.352e321e.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class Project extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            image:this.props.image,\n            title:this.props.title,\n            content:this.props.content,\n            width:'22.5vw',\n            height:'25vh',\n            opacity:0\n        }\n    }\n    render() {\n        const projectStyle={\n            backgroundImage:`url(\"${this.state.image}\")`,\n            backgroundSize:'cover',\n            backgroundPosition:'center',\n            height:this.state.height,\n            width:this.state.width\n        }\n        const fontStyle={\n            color:'white',\n            fontWeight:'700'\n        }\n        const contentStyle={\n            opacity:this.state.opacity,\n            backgroundColor:'rgba(0,0,0,.7)',\n            position:'absolute',\n            width:this.state.width,\n            height:this.state.height,\n            transition:'.20s ease-in'\n        }\n        return (\n        <div onMouseEnter={()=>{\n            this.setState({\n                opacity:1\n            })\n        }}\n        onMouseLeave={()=>{\n            this.setState({\n                opacity:0\n            })\n        }} \n        className='project' style={projectStyle}>\n            <div style={contentStyle}>\n            <h1 style={fontStyle}>{this.state.title}</h1>\n                        <hr></hr>\n            <div style={fontStyle} dangerouslySetInnerHTML={{__html:this.state.content}}></div>\n                    </div>\n            </div>\n           \n                  \n                   \n        )\n    }\n}\nexport default Project\n","import React, { Component } from 'react'\nimport Project from './Project'\nimport './App.css';\nexport class FeatureProjects extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            endpoint:this.props.endpoint,\n            content:[]\n        }\n    }\n    componentDidMount() {\n        fetch(this.state.endpoint)\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ content:data.object.metadata.feature_projects})\n            })\n            .catch(console.log)\n    }\n    render() {\n        const containerStyle={\n            display:'flex',\n            width:'100%',\n            justifyContent:'space-evenly',\n            border:'2px solid black',\n            backgroundColor:'#706677',\n            marginTop:'5%',\n            padding:'25px 25px',\n        }\n        \n        let projects = this.state.content.map((project)=>(\n            <Project content={project.content} title={project.title} image={project.metadata.image.url}/>\n        ))\n        return (\n        <div style={containerStyle}>\n            {projects}\n            </div>\n        )\n    }\n}\n\nexport default FeatureProjects\n","import React, { Component } from 'react'\n\nexport class Hero extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            endpoint:this.props.endpoint,\n            overlayColor:'',\n            hasOverlay:false,\n            height:'55vh',\n            width:'100%',\n            content:[]\n        }\n    }\n    componentDidMount() {\n        fetch(this.state.endpoint)\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ content: data.object.metadata.hero_image.url,hasOverlay:data.object.metadata.hero_overlay,overlayColor:data.object.metadata.overlay_color})\n            })\n            .catch(console.log)\n    }\n    render() {\n        const heroStyle = {\n            backgroundImage: `url(\"${this.state.content}\")`,\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundAttachment:'fixed',\n            height:this.state.height,\n            display:'flex',\n            justifyContent:'center',\n            width:this.state.width\n        }\n        var overlayStyle= {\n            position:'absolute',\n            left:'0',\n            top:'0',\n            height:this.state.height,\n            width:this.state.width,\n            backgroundColor:this.state.overlayColor\n        }\n        if(!this.state.hasOverlay){\n            const hideOverlay={\n                display:'none'\n            }\n            overlayStyle = {...hideOverlay,...overlayStyle}\n        }\n        else{\n            const showOverlay={\n                display:''\n            }\n            overlayStyle={...showOverlay,...overlayStyle}\n        }\n        return (\n        <div style={heroStyle}>\n            <div style={overlayStyle}>\n\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Hero\n","import React, { Component } from 'react'\n\nexport class Nav extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             color:this.props.color\n        }\n    }\n    \n    render() {\n        const navStyle={\n            position:'fixed',\n            top:'0',\n            left:'0',\n            right:'0',\n            zIndex:'2',\n            width:'100%',\n            height:'10%',\n            backgroundColor:this.state.color\n        }\n        return (\n            <div style={navStyle}>\n                \n            </div>\n        )\n    }\n}\n\nexport default Nav\n","import React from 'react';\nimport FeatureProjects from './FeatureProjects'\nimport Hero from './Hero'\nimport Nav from './Nav'\nimport './App.css'\nfunction App() {\n  const appStyle = {\n    display:'flex',\n    flexDirection:'column',\n    justifyContent:'flex-start',\n    alignItems:'center',\n    backgroundColor:'#D7DAE5',\n    height: '200vh',\n    width:'100vw',\n    overflowX:'hidden'\n  }\n  const endpoint='https://api.cosmicjs.com/v1/emma/object/home?pretty=true&hide_metafields=true&read_key=8LlYIAPzCgNuk5ZzICnJpeXdxS7nYs9RbsGUJ6At6lWch5CwUu&props=slug,title,content,metadata,'\n  return (\n    <div style={appStyle} className=\"App\">\n      <Hero endpoint={endpoint}/>\n      <Nav color='#706677'/>\n      <FeatureProjects endpoint={endpoint}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}